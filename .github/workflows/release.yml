name: Release

on:
  push:
    tags:
      - 'v*'

env:
  TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
  TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}

jobs:
  build_conda_matrix:
    name: Build with conda (Windows & MacOS)
    uses: ./.github/workflows/build-conda.yml 
  build_manylinux_matrix:
    name: Build with manylinux
    uses: ./.github/workflows/build-manylinux.yml
    
  release_source:
    name: Release Source
    needs: [build_conda_matrix, build_manylinux_matrix]
    runs-on: "ubuntu-latest"
    defaults:
      run:
        shell: bash -el {0}
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v3
      - uses: mamba-org/provision-with-micromamba@main
        with:
          extra-specs: python=3.10
      - name: Build
        run: |
            pip install .
      - name: Test with pytest
        run: |
            pytest
      - name: Package Source
        run: |
            python setup.py sdist            
      - name: Publish Source
        run: |
            twine upload dist/*.tar.gz
    
  release_windows_mac_wheels:
    name: Release Wheel (${{ matrix.python-version }}, ${{ matrix.os }})
    needs: [build_conda_matrix, build_manylinux_matrix]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -el {0}
    strategy:
      fail-fast: true
      matrix:
        os: ["macos-latest", "windows-latest"]
        python-version: ["3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v3
      - uses: mamba-org/provision-with-micromamba@main
        with:
          extra-specs: python=${{ matrix.python-version }}
      - name: Build
        run: |
            pip install .
      - name: Test with pytest
        run: |
            pytest
      - name: Package Wheel
        run: |
            python setup.py bdist_wheel            
      - name: Publish Wheel
        run: |
            twine upload dist/*.whl
  
  release_manylinux_wheels:
    name: Release manylinux Wheels
    needs: [build_conda_matrix, build_manylinux_matrix]
    runs-on: "ubuntu-latest"
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - name: Setup python
        uses: actions/setup-python@v1
        with:
          python-version: '3.10'
      - name: Download wheel artifacts
        uses: actions/download-artifact@v3
        with:
          name: wheel-artifacts
          path: dist
      - name: Install twine
        run: |
          pip intall twine==4.0.1
      - name: Publish manylinux Wheels
        run: |
          twine upload dist/*.whl
